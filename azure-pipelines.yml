# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'drop'
    publishLocation: 'pipeline'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      ls $(System.DefaultWorkingDirectory)
      echo $(System.DefaultWorkingDirectory)
      echo '####'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.3'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'spnq1'
    backendAzureRmResourceGroupName: 'Terraform_res'
    backendAzureRmStorageAccountName: 'macrolifestorageacc'
    backendAzureRmContainerName: 'terraform'
    backendAzureRmKey: 'terraform.tfstate'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'spnq1'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'validate'
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '--auto-approve'
    environmentServiceNameAzureRM: 'spnq1'